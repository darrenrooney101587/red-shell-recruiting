services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      # Activate port 5000 and share it
      # port 5000 is what is used for deployments by default-
      # host machine to container port
      - "${HOST_PORT:-5001}:${CONTAINER_PORT:-5000}"
    volumes:
      - .:/app
    env_file:
      - .env.prod
    environment:
      # available at runtime
      - PORT=${CONTAINER_PORT:-5000}
      - PYTHONPATH=/app/
    entrypoint: [ "/bin/bash", "/docker-entrypoint.sh" ]
    expose:
      - "${CONTAINER_PORT:-5000}"
    networks:
      - red-shell-recruiting_red-shell-recruiting

  reverse-proxy:
    image: nginx:latest
    container_name: reverse-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
      - .:/app
      - ./static:/static
    depends_on:
      - web
    profiles: ["production"]
    networks:
      - red-shell-recruiting_red-shell-recruiting

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    profiles: ["production"]
    networks:
      - red-shell-recruiting_red-shell-recruiting

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - red-shell-recruiting_red-shell-recruiting

  celery:
    build: .
    entrypoint: ["/docker-entrypoint-celery.sh"]
    depends_on:
      - redis
      - web
    environment:
      - DJANGO_SETTINGS_MODULE=app_admin.settings
    volumes:
      - .:/app
    networks:
      - red-shell-recruiting_red-shell-recruiting


networks:
  red-shell-recruiting_red-shell-recruiting:
    driver: bridge
